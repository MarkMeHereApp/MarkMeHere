generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("NON_POOLING_DATABASE_URL") // uses a direct connection
}

model User {
  id          String    @id @unique
  email       String    @unique
  firstName   String    @db.VarChar(255)
  lastName    String    @db.VarChar(255)
  dateCreated DateTime? @default(now())
  password    String?   @db.VarChar(255)
  //courseMembers     CourseMember[]  
}

model Lecture {
  id                String            @id @unique
  // course            Course            @relation(fields: [courseId], references: [id])
  courseId          String            @unique
  lectureDate       DateTime
  attendanceEntries AttendanceEntry[]
}

model AttendanceEntry {
  id          String       @id @unique
  lecture     Lecture      @relation(fields: [lectureId], references: [id])
  lectureId   String
  studentId   String
  // student     CourseMember @relation(fields: [studentId], references: [id])
  checkInDate DateTime     @default(now())
  status      String       @default("present")
}

model Course {
  id          String         @id @unique
  // dateCreated DateTime
  // StartDate   DateTime
  // EndDate     DateTime?
  // lectures    Lecture[]
  // enrollments CourseMember[]
}

model CourseMember {
  id                String            @id @unique
  lmsId             String? // We need this when registering a student     
  email             String
  firstName         String?           @db.VarChar(255) // Right now optional
  lastName          String?           @db.VarChar(255) // Right now optional
  courseId          String
  // course            Course            @relation(fields: [courseId], references: [id])
  dateCreated       DateTime?         @default(now())
  //user              User              @relation(fields: [email], references: [email]) // For now we don't need to focus on this 
  role    String   @default("STUDENT") 
  // attendanceEntries AttendanceEntry[]
}
