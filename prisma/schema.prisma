generator client {
  provider = "prisma-client-js"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum UserType {
  ADMIN
  STUDENT
  PROFESSOR
}

model User {
  id                String            @id @unique
  userType          UserType?
  email             String            @unique
  firstName         String            @default("null") @db.VarChar(255)
  lastName          String            @default("null") @db.VarChar(255)
  fullName          String            @default("null") @db.VarChar(255)
  dateCreated       DateTime
  password          String            @db.VarChar(255)
  coursesAsStudent  Course[]          @relation("Course_Students")
  lecturesAttended  Lecture[]         @relation("Student_LecturesAttended")
  attendanceEntries AttendanceEntry[]
  // coursesAsProfessor Course[]  @relation("Course_Professors")
  // coursesAsAdmin     Course[]  @relation("Course_Admins")
}

model Lecture {
  id                String            @id @unique
  course            Course            @relation(fields: [courseId], references: [id])
  courseId          String            @unique
  StartDate         DateTime
  EndDate           DateTime?
  studentAttendance User[]            @relation("Student_LecturesAttended")
  attendanceEntries AttendanceEntry[]
}

model AttendanceEntry {
  id          String   @id @unique
  lecture     Lecture  @relation(fields: [lectureId], references: [id])
  lectureId   String   @unique
  student     User     @relation(fields: [studentId], references: [id])
  studentId   String   @unique
  checkInDate DateTime @default(now())
}

model Course {
  id          String    @id @unique
  students    User[]    @relation("Course_Students")
  dateCreated DateTime
  StartDate   DateTime
  EndDate     DateTime?
  lectures    Lecture[]
  // professors User[] @relation("Course_Professors")
  // admins      User[]    @relation("Course_Admins")
}
